apply plugin: 'com.android.application'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.0'
        classpath 'net.sf.proguard:proguard-gradle:4.10'
    }
}

allprojects {
    repositories {
        mavenCentral()
        jcenter()
    }
}



android {
    compileSdkVersion Integer.parseInt(CompileSdkVersion)
    buildToolsVersion BuildToolsVersion
    defaultConfig {
        minSdkVersion Integer.parseInt(MinSdkVersion)
        targetSdkVersion Integer.parseInt(TargetSdkVersion)
    }

    lintOptions {
        abortOnError false
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            aidl.srcDirs = ['aidl']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
            jni.srcDirs = ["jni"]
        }
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    signingConfigs {
        signConfig {
            storeFile file("gang.keystore")
            storePassword "xiaogang"
            keyAlias "android.keystore"
            keyPassword "xiaogang"

        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.signConfig
        }
        release {
            minifyEnabled true
            signingConfig signingConfigs.signConfig
            proguardFile 'proguard-project.txt'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    compile project(':module-view')
    compile project(':module-utils')
    compile project(':module-locker')

    provided files(getLayoutLibPath())

//    compile 'com.android.support:support-v4:23.0.1'
    compile group: 'com.nineoldandroids', name: 'library', version: '2.4.0'
//    compile 'com.google.code.gson:gson:2.1'
//    compile 'com.android.support:cardview-v7:23.0.1'
//    compile 'com.android.support:recyclerview-v7:23.+'
//    compile group: 'de.greenrobot', name: 'eventbus', version: '2.2.1'
}

def getLayoutLibPath() {
    return "${android.getSdkDirectory().getAbsolutePath()}" + "/platforms/" + android.compileSdkVersion + "/data/layoutlib.jar"
}

//生成jar
//gradle -q dependencies 查看依赖
task copyAssets(type: Copy) {
    from 'src/main/assets'
    into 'build/intermediates/classes/release/assets'
}

//打jar
//,dependsOn: tasks.findAll { task -> task.name.equals('_releaseCompile') }
task genJar(type: Jar) {
    from fileTree(dir: 'build/intermediates/classes/release/')
    archiveName = 'gp_android_sdk_unproguard.jar'
}

//混淆jar
task progJar(type: proguard.gradle.ProGuardTask) {
    injars 'build/libs/gp_android_sdk_unproguard.jar'
    outjars 'build/libs/gp_android_sdk.jar'
    libraryjars System.getenv("ANDROID_HOME") + "/platforms/android-19/android.jar"
    println("libraryjars path:" + System.getenv("ANDROID_HOME") + "/platforms/android-19/android.jar")

    // 具体需要keep住的类
    configuration 'proguard-project.txt'
}
